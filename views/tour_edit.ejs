<!DOCTYPE html>

<html lang="ko">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <title>스쿠버 링크 : 투어/교육 수정</title>

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
        <link rel="stylesheet" type="text/css" href="/css/Scubalink_CSS.css" />
        <link rel="stylesheet" type="text/css" href="/css/Scubalink_CSS_02.css" />

        <style>
            #btn_back { position: absolute; width: 40px; height: 40px; top: 0; left: 0; margin-left: 5px; margin-top: 5px; }
            #back { position: absolute; width: 16px; opacity: 0.54; top: 0; left: 0; margin-top: 12px; margin-left: 12px; }
            #header_title { top: 0; padding-top: 0; line-height: 50px; }

            #tour_edu_plus p.t_left { margin-left: 0; margin-top: 0; color: #e02020; }
            .my_certif_image div #img-upload.on { top: -110px; }
            #input_tour_start, #input_tour_end { background: white; }
            #tour_edu_plus #tour_member div { display: inline-block; float: initial; }
            #tour_edu_plus #tour_member span.c_text { position: absolute; top: initial; left: initial; float: initial; bottom: 14px; right: 16px; }
        </style>
    </head>

    <body>
        <div class="header" name="certif">
            <span id="header_title" class="logo_mini">투어/교육 수정</span>
            <div id="btn_back"><img src="/img/left-arrow.svg" id="back" alt="" /></div>
        </div>

        <div id="tour_edu_plus">
            <div class="tour_input">
                <p>투어/교육 이름 (필수)</p>
                <input id="input_tour_name" type="text" class="form-control" placeholder="예) 동해 오픈워터 해양실습" value="<%= name %>" />
                <p class="explain t_err t_left" id="input_name_empty_error">교육 이름을 입력하세요.</p>
            </div>

            <div id="tour_date" class="tour_input">
                <p>기간 (필수)</p>
                <div>
                    <text>출발일</text>
                    <input id="input_tour_start" type="date" value="<%= startdate.substr(0,4) %>-<%= startdate.substr(4,2) %>-<%= startdate.substr(6,2) %>" />
                </div>
                <div>
                    <text>도착일</text>
                    <input id="input_tour_end" type="date" value="<%= enddate.substr(0,4) %>-<%= enddate.substr(4,2) %>-<%= enddate.substr(6,2) %>" />
                </div>
                <p class="explain t_err t_left" id="input_date_empty_error">교육 기간을 선택하세요.</p>
                <p class="explain t_err t_left" id="input_date_limit_error">교육 시작일자가 종료일자를 넘을 수 없습니다.</p>
            </div>

            <div class="tour_input">
                <p>장소 (필수)</p>
                <input id="input_tour_place" type="text" class="form-control" placeholder=" 예) 해피 다이빙 리조트" value="<%= place %>" />
                <p class="explain t_err t_left" id="input_place_empty_error">교육 장소를 입력하세요.</p>
            </div>

            <div id="tour_member" class="tour_input">
                <p>참여자 수</p>
                <div style="position: relative;">
                    <span class="ex_text">강사</span>
                    <input type="number"id="input_tour_member_count_ins" placeholder="0" min="1" max="100;" value="<%= insCount %>" />
                    <span class="c_text">명</span>
                </div>
                <div style="position: relative;">
                    <span class="ex_text">교육생</span>
                    <input type="number"id="input_tour_member_count_bgn" placeholder="0" min="1" max="100;" value="<%= bgnCount %>" />
                    <span class="c_text">명</span>
                </div>
                <p class="explain t_err t_left" id="input_member_count_empty_error">참여 인원을 입력하세요.</p>
                <p class="explain t_err t_left" id="input_member_count_zero_error">참여인원은 1명 이상이어야 합니다.</p>
            </div>

            <div class="tour_input">
                <p>간단한 설명(최대 140자) (선택)</p>
                <textarea id="input_tour_description" name="test" class="form-control" placeholder="안전하고 즐거운 해양실습"><%= description %></textarea>
            </div>

            <div class="tour_input">
                <p>대표사진 (선택)</p>
                <div class="my_certif_image btn-file">
                    <i class="glyphicon glyphicon-picture"></i>
                    <p>눌러서 이미지를 추가하세요</p>
                    <input type="file" id="imgInp" name='tourImage' />
                    <div><img id='img-upload' alt='' src="<% if(!locals.image || image == undefined || image == "") { %>/img/blank_tour.png<% } else {%><%= image %><% } %>" class="on" /></div>
                </div>
            </div>
        </div>

        <input id="tour_add_submit" type="button" value="완료" class="btn">

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
        <script type="text/javascript" src="/js/Scubalink_js.js"></script>
        <script type="text/javascript" src="/js/httpUtil.js"></script>
        <script type="text/javascript">
            var tourId = '<%= _id %>';
            var data = <%- JSON.stringify(cost) %>;
            var bgnCount = parseInt('<%= bgnCount %>');
            var insCount = parseInt('<%= insCount %>');

            document.getElementById('btn_back').onclick = function() {
                history.back();
            };

            document.getElementById('input_tour_start').onchange = function (event) {
                if (document.getElementById('input_tour_end').value === '') {
                    document.getElementById('input_tour_end').value = event.target.value;
                }
            };

            document.getElementById('tour_add_submit').onclick = function() {
                // 교육이름 빈칸 체크
                if( document.getElementById('input_tour_name').value == "" ) {
                    document.getElementById('input_name_empty_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_name_empty_error').style.display = "none";
                }

                // 교육기간 빈칸 체크
                if( document.getElementById('input_tour_start').value == "" || document.getElementById('input_tour_end').value == "" ) {
                    document.getElementById('input_date_empty_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_date_empty_error').style.display = "none";
                }

                // 교육기간 오류 체크
                var startDate = document.getElementById('input_tour_start').value.replace(/-/gi, "").replace(/\./gi, "");
                var endDate = document.getElementById('input_tour_end').value.replace(/-/gi, "").replace(/\./gi, "");
                if( parseInt(endDate) < parseInt(startDate) ) {
                    document.getElementById('input_date_limit_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_date_limit_error').style.display = "none";
                }

                // 교육장소 빈칸 체크
                if( document.getElementById('input_tour_place').value == "" ) {
                    document.getElementById('input_place_empty_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_place_empty_error').style.display = "none";
                }

                // 교육 참여 인원 빈칸 체크
                if( document.getElementById('input_tour_member_count_ins').value === '' || document.getElementById('input_tour_member_count_bgn').value === '' ) {
                    document.getElementById('input_member_count_empty_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_member_count_empty_error').style.display = "none";
                }

                // 교육 참여 인원 0 체크
                if( document.getElementById('input_tour_member_count_ins').value == 0 || document.getElementById('input_tour_member_count_bgn').value == 0 ) {
                    document.getElementById('input_member_count_zero_error').style.display = "block";
                    return;
                }
                else {
                    document.getElementById('input_member_count_zero_error').style.display = "none";
                }

                // 비용 재계산
                if (data != null) {
                    bgnCount = parseInt(document.getElementById('input_tour_member_count_bgn').value);
                    insCount = parseInt(document.getElementById('input_tour_member_count_ins').value);
                    calculation();
                }

                var editParameters = {};
                editParameters.name = document.getElementById('input_tour_name').value;
                editParameters.startdate = document.getElementById('input_tour_start').value.replace(/-/gi, "").replace(/\./gi, "");
                editParameters.enddate = document.getElementById('input_tour_end').value.replace(/-/gi, "").replace(/\./gi, "");
                editParameters.place = document.getElementById('input_tour_place').value;
                editParameters.member = parseInt(document.getElementById('input_tour_member_count_ins').value) + parseInt(document.getElementById('input_tour_member_count_bgn').value);
                editParameters.insCount = parseInt(document.getElementById('input_tour_member_count_ins').value);
                editParameters.bgnCount = parseInt(document.getElementById('input_tour_member_count_bgn').value);
                editParameters.description = document.getElementById('input_tour_description').value;
                editParameters.tourId = tourId;

                if( document.getElementById('imgInp').files[0] != undefined )
                    editParameters.tourImage = document.getElementById('imgInp').files[0];

                httpSend.upload("/tour/update", editParameters, function(result) {
                    if (data != null) {
                        httpSend.send("/tour/cost/update", {
                            tourId: tourId,
                            cost: data
                        }, "POST", function() {
                            history.back();
                        }, function(errorCode, errorMessage) {
                            console.log(errorMessage);
                        });
                    } else {
                        history.back();
                    }
                }, function(errorCode, errorMessage) {
                    if( errorCode == "T002" )
                        alert(errorMessage);
                    else
                        console.log(errorMessage);
                });
            };

            function calculation () {
                var incomePerPerson = 0;
                var expensePerPerson = 0;
                var income = 0;
                var expense = 0;
                for (var i = 0; i < data.cost.length; i++) {
                    var costPrice = data.cost[i].price === '' ? 0 : data.cost[i].price;
                    var costCount = data.cost[i].count === '' ? 0 : data.cost[i].count;
                    var costExpense = data.cost[i].expense === '' ? 0 : data.cost[i].expense;
                    var basicIncome = costPrice * costCount;
                    var basicExpense = costExpense * costCount;

                    if (data.cost[i].public && data.cost[i].include) {
                        income = Math.floor(basicIncome / bgnCount * 100) / 100;
                        expense = Math.floor(basicExpense / bgnCount * 100) / 100;
                    } else if (data.cost[i].public) {
                        income = Math.floor(basicIncome / (bgnCount + insCount) * 100) / 100;
                        expense = Math.floor(basicExpense / (bgnCount + insCount) * 100) / 100;
                    } else if (data.cost[i].include) {
                        income = Math.floor((basicIncome + basicIncome * insCount / bgnCount) * 100) / 100;
                        expense = Math.floor((basicExpense + basicExpense * insCount / bgnCount) * 100) / 100;
                    } else {
                        income = Math.floor(basicIncome * 100) / 100;
                        expense = Math.floor(basicExpense * 100) / 100;
                    }

                    if (data.cost[i].priceType !== data.currency) {
                        for (var j = 0; j < data.exchangerate.length; j++) {
                            if (data.cost[i].priceType === data.exchangerate[j].type) {
                                income = Math.floor(income * data.exchangerate[j].price * data.exchangerate[j].rate * 100) / 100;
                                expense = Math.floor(expense * data.exchangerate[j].price * data.exchangerate[j].rate * 100) / 100;
                            }
                        }
                    }

                    incomePerPerson += income;
                    expensePerPerson += expense;
                }
                incomePerPerson += data.adjustment.price;

                for (i = 0; i < data.additional.length; i++) {
                    var additionalPrice = (data.additional[i].price === '' ? 0 : data.additional[i].price);
                    var additionalCount = (data.additional[i].count === '' ? 0 : data.additional[i].count);
                    var additionalExpense = Math.floor(additionalPrice * additionalCount / bgnCount * 100) / 100;
                    if (data.additional[i].priceType !== data.currency) {
                        for (j = 0; j < data.exchangerate.length; j++) {
                            if (data.additional[i].priceType === data.exchangerate[j].type) {
                                additionalExpense = Math.floor(additionalExpense * data.exchangerate[j].price * data.exchangerate[j].rate * 100) / 100;
                            }
                        }
                    }
                    expensePerPerson += additionalExpense;
                }

                incomePerPerson = Math.floor(incomePerPerson * 100) / 100;
                var profitPerPerson = 0;
                if (incomePerPerson - expensePerPerson < 0) {
                    profitPerPerson = Math.ceil((incomePerPerson - expensePerPerson) * 100) / 100;
                } else {
                    profitPerPerson = Math.floor((incomePerPerson - expensePerPerson) * 100) / 100;
                }
                var totalProfit = Math.floor(profitPerPerson * bgnCount * 100) / 100;

                data.incomePerPerson = incomePerPerson;
                data.profitPerPerson = profitPerPerson;
                data.profit = totalProfit;
            }
        </script>
    </body>
</html>
